version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: video-downloader-postgres
    environment:
      POSTGRES_DB: video_downloader
      POSTGRES_USER: video_downloader
      POSTGRES_PASSWORD: secure_password_123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - video-downloader-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U video_downloader -d video_downloader"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Video Downloader API
  api:
    build: .
    container_name: video-downloader-api
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=video_downloader
      - DB_USER=video_downloader
      - DB_PASSWORD=secure_password_123
      - MINIO_ENDPOINT=minio-u39275.vm.elestio.app:34256
      - MINIO_ACCESS_KEY=root
      - MINIO_SECRET_KEY=o86Lv2Ta-x1rk-SHd5RK0B
      - MINIO_SECURE=true
      - MINIO_BUCKET=video-downloads
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - DEBUG=false
    ports:
      - "8000:8000"
    volumes:
      - ./downloads:/app/downloads
    networks:
      - video-downloader-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # DBGate for database management
  dbgate:
    image: dbgate/dbgate:latest
    container_name: video-downloader-dbgate
    environment:
      - CONNECTIONS=postgres://video_downloader:secure_password_123@postgres:5432/video_downloader
    ports:
      - "3000:3000"
    networks:
      - video-downloader-network
    depends_on:
      - postgres
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  video-downloader-network:
    driver: bridge 